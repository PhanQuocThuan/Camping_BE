html {
  font-size: 14px;
}

@media (min-width: 768px) {
  html {
    font-size: 16px;
  }
}

.btn:focus,
.btn:active:focus,
.btn-link.nav-link:focus,
.form-control:focus,
.form-check-input:focus {
  box-shadow: 0 0 0 0.1rem white, 0 0 0 0.25rem #258cfb;
}

html {
  position: relative;
  min-height: 100%;
}

body {
  margin-bottom: 60px;
}
/* From Uiverse.io by satyamchaudharydev */
/* From uiverse.io by @satyamchaudharydev */
/* removing default style of button */

.form button {
  border: none;
  background: none;
  color: #8b8ba7;
}
/* styling of whole input container */
.form {
  --timing: 0.3s;
  --width-of-input: 200px;
  --height-of-input: 40px;
  --border-height: 2px;
  --input-bg: #fff;
  --border-color: #2f2ee9;
  --border-radius: 30px;
  --after-border-radius: 1px;
  position: relative;
  width: var(--width-of-input);
  height: var(--height-of-input);
  display: flex;
  align-items: center;
  padding-inline: 0.8em;
  border-radius: var(--border-radius);
  transition: border-radius 0.5s ease;
  background: var(--input-bg, #fff);
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.075);
}
/* styling of Input */
.input {
  font-size: 0.9rem;
  background-color: transparent;
  width: 100%;
  height: 100%;
  padding-inline: 0.5em;
  padding-block: 0.7em;
  border: none;
}
/* styling of animated border */
.form:before {
  content: "";
  position: absolute;
  background: var(--border-color);
  transform: scaleX(0);
  transform-origin: center;
  width: 100%;
  height: var(--border-height);
  left: 0;
  bottom: 0;
  border-radius: 1px;
  transition: transform var(--timing) ease;
}
/* Hover on Input */
.form:focus-within {
  border-radius: var(--after-border-radius);
}

input:focus {
  outline: none;
}
/* here is code of animated border */
.form:focus-within:before {
  transform: scale(1);
}
/* styling of close button */
/* == you can click the close button to remove text == */
.reset {
  background: none;
  opacity: 0;
  visibility: hidden;
}
/* close button shown when typing */
input:not(:placeholder-shown) ~ .reset {
  opacity: 1;
  visibility: visible;
}
/* sizing svg icons */
.form svg {
  width: 17px;
  margin-top: 3px;
}

.list {
  list-style: none;
  display: flex;
  align-items: center;
}

.link {
  color:black;
  position: relative;
  display: inline-block;
  text-decoration: none;
  font-weight: 700;
}

.img-fluid {
  width: 10rem;
  height: 10rem;
}

a.btn {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  background-color: #f0f0f0;
}

a.btn i {
  font-size: 20px;
  line-height: 1;
}

.twitter:hover {
  color: #fff;
  background-color: #000000;
  border-color: #000000;
}

.github:hover {
  color: #fff;
  background-color: #000000;
  border-color: #000000;
}

.facebook:hover {
  color: #fff;
  background-color: #007bff;
  border-color: #007bff;
}

.youtube:hover {
  color: #ff0000;
  background-color: #ffffff;
  border-color: #ff0000;
}

.linkedin:hover {
  color: #fff;
  background-color: #007bff;
  border-color: #007bff;
}

/* From Uiverse.io by 3bdel3ziz-T */
.select {
  width: fit-content;
  cursor: pointer;
  position: relative;
  transition: 300ms;
  color: white;
  overflow: hidden;
}

.selected {
  background-color: #2a2f3b;
  padding: 5px;
  margin-bottom: 3px;
  border-radius: 5px;
  position: relative;
  z-index: 100000;
  font-size: 15px;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.arrow {
  position: relative;
  right: 0px;
  height: 10px;
  transform: rotate(-90deg);
  width: 25px;
  fill: white;
  z-index: 100000;
  transition: 300ms;
}

.options {
  display: flex;
  flex-direction: column;
  border-radius: 5px;
  padding: 5px;
  background-color: #2a2f3b;
  position: relative;
  top: -100px;
  opacity: 0;
  transition: 300ms;
}

.select:hover > .options {
  opacity: 1;
  top: 0;
}

.select:hover > .selected .arrow {
  transform: rotate(0deg);
}

.option {
  border-radius: 5px;
  padding: 5px;
  transition: 300ms;
  background-color: #2a2f3b;
  width: 150px;
  font-size: 15px;
}
.option:hover {
  background-color: #323741;
}

.options input[type="radio"] {
  display: none;
}

.options label {
  display: inline-block;
}
.options label::before {
  content: attr(data-txt);
}

.options input[type="radio"]:checked + label {
  display: none;
}

.options input[type="radio"]#all:checked + label {
  display: none;
}

.select:has(.options input[type="radio"]#all:checked) .selected::before {
  content: attr(data-default);
}
.select:has(.options input[type="radio"]#option-1:checked) .selected::before {
  content: attr(data-one);
}
.select:has(.options input[type="radio"]#option-2:checked) .selected::before {
  content: attr(data-two);
}
.select:has(.options input[type="radio"]#option-3:checked) .selected::before {
  content: attr(data-three);
}

.badge {
  color: #ff0000;
  font-size: 0.75rem;
}

.nav-item {
  margin-top: 5px;
  margin-bottom: 5px;
  margin-right:0;
  margin-left: 0;
}

.nav-item .link:hover {
  color: white;
}
/* From Uiverse.io by andrew-demchenk0 */
.rating:not(:checked) > input {
  appearance: none;
}

.rating:not(:checked) > label {
  float: right;
  cursor: pointer;
  font-size: 30px;
  color: #666;
}

.rating:not(:checked) > label:before {
  content: "★";
}

.rating > input:checked + label:hover,
.rating > input:checked + label:hover ~ label,
.rating > input:checked ~ label:hover,
.rating > input:checked ~ label:hover ~ label,
.rating > label:hover ~ input:checked ~ label {
  color: #e58e09;
}

.rating:not(:checked) > label:hover,
.rating:not(:checked) > label:hover ~ label {
  color: #ff9e0b;
}

.rating > input:checked ~ label {
  color: #ffa723;
}
.rating {
  width: 9rem;
  height: 3rem;
  justify-content: center;
  margin: auto;
}
 .radio-input-size input {
    display: none;
}

 .radio-input-size {
    --container_width: 300px;
    position: relative;
    display: flex;
    align-items: center;
    border-radius: 10px;
    background-color: #fff;
    color: #000000;
    width: var(--container_width);
    overflow: hidden;
    border: 1px solid rgba(53, 52, 52, 0.226);
}

    .radio-input-size label {
        width: 100%;
        padding: 10px;
        cursor: pointer;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1;
        font-weight: 600;
        letter-spacing: -1px;
        font-size: 14px;
    }

 .selection {
    display: none;
    position: absolute;
    height: 100%;
    width: calc(var(--container_width) / 2);
    z-index: 0;
    left: 0;
    top: 0;
    transition: 0.15s ease;
}

.radio-input-size label:has(input:checked) {
    color: #fff;
}

    .radio-input-size label:has(input:checked) ~ .selection {
        background-color: rgb(11 117 223);
        display: inline-block;
    }

.radio-input-size label:nth-child(1):has(input:checked) ~ .selection {
    transform: translateX(calc(var(--container_width) * 0 / 2));
}

.radio-input-size label:nth-child(2):has(input:checked) ~ .selection {
    transform: translateX(calc(var(--container_width) * 1 / 2));
}

/* different */
.select-color {
  flex-grow: 1;
  margin: auto;
}

.select-color input[type="radio"] {
  display: none;
}

.select-color label {
  display: inline-block;
  padding: 10px 20px;
  cursor: pointer;
  border: 1px solid #2b426d;
  background-color: #385c7e;
  color: white;
  border-radius: 15px;
  transition: all ease 0.2s;
  text-align: center;
  flex-grow: 1;
  flex-basis: 0;
  width: 90px;
  font-size: 13px;
  margin: 5px;
  box-shadow: 0px 0px 50px -15px #000000;
}

.select-color input[type="radio"]:checked + label {
  background-color: white;
  color: #02375a;
  border: 1px solid #2b426d;
}

fieldset {
  border: 0;
  display: flex;
}
/* From Uiverse.io by cssbuttons-io */
button {
  font-size: 17px;
  padding: 1em 2.7em;
  font-weight: 500;
  background: #1f2937;
  color: white;
  border: none;
  position: relative;
  overflow: hidden;
  border-radius: 0.6em;
  cursor: pointer;
}

.gradient {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  border-radius: 0.6em;
  margin-top: -0.25em;
  background-image: linear-gradient(
    rgba(0, 0, 0, 0),
    rgba(0, 0, 0, 0),
    rgba(0, 0, 0, 0.3)
  );
}

.label {
  position: relative;
  top: -1px;
}

.transition {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 500ms;
  background-color: rgba(16, 185, 129, 0.6);
  border-radius: 9999px;
  width: 0;
  height: 0;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

button:hover .transition {
  width: 14em;
  height: 14em;
}

button:active {
  transform: scale(0.97);
}

.menu {
    font-size: 16px;
    line-height: 1.6;
    color: #000000;
    width: fit-content;
    display: flex;
    list-style: none;
}

.menu a {
    text-decoration: none;
    color: inherit;
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
}

.menu .link {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 12px;
    padding: 12px 36px;
    overflow: hidden;
    transition: all 0.48s cubic-bezier(0.23, 1, 0.32, 1);
    }

    .menu .link::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: #9aaf6e;
        z-index: -1;
        transform: scaleX(0);
        transform-origin: left;
        transition: transform 0.48s cubic-bezier(0.23, 1, 0.32, 1);
    }

.menu .link svg {
    width: 14px;
    height: 14px;
    fill: #000000;
    transition: all 0.48s cubic-bezier(0.23, 1, 0.32, 1);
}

.menu .item {
    position: relative;
}

.menu .item .submenu {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: absolute;
    top: 100%;
    /*border-radius: 0 0 16px 16px;*/
    left: 0;
    width: 100%;
    overflow: hidden;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-12px);
    transition: all 0.48s cubic-bezier(0.23, 1, 0.32, 1);
    z-index: 1;
    pointer-events: none;
    list-style: none;
}

.menu .item:hover .submenu {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
    pointer-events: auto;
}

.menu .item:hover .link {
    color: #ffffff;
}

.menu .item:hover .link::after {
    transform: scaleX(1);
    transform-origin: right;
}

.menu .item:hover .link svg {
    fill: #ffffff;
    transform: rotate(-180deg);
}

.submenu .submenu-item {
    width: 100%;
    transition: all 0.48s cubic-bezier(0.23, 1, 0.32, 1);
}

.submenu .submenu-link {
    display: block;
    padding: 12px 24px;
    width: 100%;
    position: relative;
    text-align: center;
    transition: all 0.48s cubic-bezier(0.23, 1, 0.32, 1);
}

.submenu .submenu-item:last-child .submenu-link {
    border-bottom: none;
}

.submenu .submenu-link::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    transform: scaleX(0);
    width: 100%;
    height: 100%;
    background-color: #9aaf6e;
    z-index: -1;
    transform-origin: left;
    transition: transform 0.48s cubic-bezier(0.23, 1, 0.32, 1);
}

.submenu .submenu-link:hover:before {
    transform: scaleX(1);
    transform-origin: right;
}

.submenu .submenu-link:hover {
    color: #ffffff;
}
.footer .col h3{
    color:white;
}
.footer ul li a{
    color:white;
}
.footer ul li a:hover {
    color: blue;
}
.footer{
    background-image: url(/img/bg-footer.jpg);
}
.card {
    position: relative;
    width: 300px;
    height: 200px;
    background-color: #f2f2f2;
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    perspective: 1000px;
    box-shadow: 0 0 0 5px #ffffff80;
    transition: all 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

    .card svg {
        width: 48px;
        fill: #333;
        transition: all 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    .card:hover {
        transform: scale(1.05);
        box-shadow: 0 8px 16px rgba(255, 255, 255, 0.2);
    }

.card__content {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    padding: 20px;
    box-sizing: border-box;
    background-color: #f2f2f2;
    transform: rotateX(-90deg);
    transform-origin: bottom;
    transition: all 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.card:hover .card__content {
    transform: rotateX(0deg);
}

.card__title {
    margin: 0;
    font-size: 24px;
    color: #333;
    font-weight: 700;
}

.card:hover svg {
    scale: 0;
}
/* From Uiverse.io by halitgurpinar */
.radio-input input {
    display: none;
}

.radio-input {
    --container_width: 250px;
    position: relative;
    display: flex;
    align-items: center;
    border-radius: 10px;
    background-color: #212121;
    color: #eee;
    width: var(--container_width);
    overflow: hidden;
    border: 2px solid #fff;
}

    .radio-input label {
        width: 100%;
        padding: 10px;
        cursor: pointer;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1;
        font-weight: 600;
        letter-spacing: -1px;
        font-size: 14px;
    }

.selection {
    display: none;
    position: absolute;
    height: 100%;
    width: calc(var(--container_width) / 2);
    z-index: 0;
    left: 0;
    top: 0;
    transition: 0.15s ease;
}

.radio-input label:nth-child(1):has(input:checked) {
    color: #fff;
}

.radio-input label:nth-child(2):has(input:checked) {
    color: #212121;
}

.radio-input label:nth-child(1):has(input:checked) ~ .selection {
    background-color: #ff0000;
    display: inline-block;
}

.radio-input label:nth-child(2):has(input:checked) ~ .selection {
    background-color: #fd0;
    display: inline-block;
}

.radio-input label:nth-child(1):has(input:checked) ~ .selection {
    transform: translateX(calc(var(--container_width) * 0 / 2));
}

.radio-input label:nth-child(2):has(input:checked) ~ .selection {
    transform: translateX(calc(var(--container_width) * 1 / 2));
}

.ffbox {
    display: flex;
    width: 80%;
    max-width: 800px;
    background-color: #fff;
    border: 3px solid #e4e4e9;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    border-radius: 10px;
    flex-wrap: wrap;
}

.ffbox1 {
    flex: 1;
    padding: 20px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

    .ffbox1 label {
        display: block;
        margin-bottom: 8px;
    }

    .ffbox1 input,
    .ffbox1 textarea {
        width: 100%;
        padding: 8px;
        margin-bottom: 16px;
        box-sizing: border-box;
        border-radius: 15px;
        background-color: #dcdce1;
        border: none;
    }

    .ffbox1 textarea {
        resize: vertical;
    }

.ffbox1 {
    margin-bottom: 16px;
}

    .ffbox1 label {
        margin-right: 16px;
    }

.map-div {
    flex: 1;
    background-color: #eee;
}


.map-div iframe {
    border: 0;
    padding: 10px;
}

.gfg {
    text-align: center;
    color: green;
}

.map-div {
    background-color: rgb(81, 85, 94);
}

/* From Uiverse.io by gharsh11032000 */
.card-service {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 320px;
    border-radius: 24px;
    line-height: 1.6;
    transition: all 0.64s cubic-bezier(0.23, 1, 0.32, 1);
}

.content-service {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 24px;
    padding: 36px;
    border-radius: 24px;
    background: transparent;
    color: #000000;
    z-index: 1;
    transition: all 0.64s cubic-bezier(0.23, 1, 0.32, 1);
}

.card-service::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    background-color: #0a3cff;
    border-radius: inherit;
    height: 100%;
    width: 100%;
    opacity: 0;
    transform: skew(-24deg);
    clip-path: circle(0% at 50% 50%);
    transition: all 0.64s cubic-bezier(0.23, 1, 0.32, 1);
}

.content-service .heading {
    font-weight: 700;
    font-size: 36px;
    line-height: 1.3;
    z-index: 1;
}

.content-service .para {
    z-index: 1;
    opacity: 0.8;
    font-size: 18px;
}

.content-service .para-sm {
    font-size: 16px;
}

.card-service:hover::before {
    opacity: 1;
    transform: skew(0deg);
    clip-path: circle(140.9% at 0 0);
}

.card-service:hover .content-service {
    color: #ffffff;
}
.fruite .tab-class .nav-item a.active {
    background: var(--bs-secondary) !important;
}

    .fruite .tab-class .nav-item a.active span {
        color: var(--bs-white) !important;
    }

.fruite .fruite-categorie .fruite-name {
    line-height: 40px;
}

    .fruite .fruite-categorie .fruite-name a {
        transition: 0.5s;
    }

        .fruite .fruite-categorie .fruite-name a:hover {
            color: var(--bs-secondary);
        }

.fruite .fruite-item {
    height: 100%;
    transition: 0.5s;
}

    .fruite .fruite-item:hover {
        box-shadow: 0 0 55px rgba(0, 0, 0, 0.4);
    }

    .fruite .fruite-item .fruite-img {
        overflow: hidden;
        transition: 0.5s;
        border-radius: 10px 10px 0 0;
    }

        .fruite .fruite-item .fruite-img img {
            transition: 0.5s;
        }

            .fruite .fruite-item .fruite-img img:hover {
                transform: scale(1.3);
            }

/* From Uiverse.io by adamgiebl */
.button-cart {
    font-family: inherit;
    font-size: 20px;
    background: royalblue;
    color: white;
    padding: 0.7em 1em;
    padding-left: 0.9em;
    display: flex;
    align-items: center;
    border: none;
    border-radius: 16px;
    overflow: hidden;
    transition: all 0.2s;
    cursor: pointer;
}

    .button-cart span {
        display: block;
        margin-left: 0.3em;
        transition: all 0.3s ease-in-out;
    }

    .button-cart svg {
        display: block;
        transform-origin: center center;
        transition: transform 0.3s ease-in-out;
    }

    .button-cart:hover .svg-wrapper {
        animation: fly-1 0.6s ease-in-out infinite alternate;
    }
    .button-cart:hover span {
        animation: fly-1 0.6s ease-in-out infinite alternate;
    }

    .button-cart:hover svg {
        transform: translateX(1.2em) rotate(45deg) scale(1.1);
    }


    .button-cart:active {
        transform: scale(0.95);
    }

@keyframes fly-1 {
    from {
        transform: translateY(0.1em);
    }

    to {
        transform: translateY(-0.1em);
    }
}
.service .service-item .service-content {
    position: relative;
    width: 250px;
    height: 130px;
    top: -50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
.container-header {
    background-image: url('/img/nav2.jpg'); /* Đường dẫn tới ảnh */
    background-size: cover; /* Để ảnh phủ toàn bộ vùng */
    background-position: center; /* Căn giữa ảnh */
    height: 25px; /* Chiều cao container-header */
    width: 100%; /* Độ rộng toàn màn hình */
    position: fixed; /* Giữ cố định */
    top: 0; /* Căn trên cùng của trang */
    left: 0; /* Căn bên trái */
    z-index: 100; /* Đảm bảo header ở trên các phần tử khác */
}

.bg-black1 {
    background: linear-gradient(90deg, white, #87CEFA); /* Nền trắng - xanh da trời */
    color: black; /* Chuyển toàn bộ nội dung thành màu đen */
    padding: 20px; /* Khoảng cách bên trong */
    border-radius: 8px; /* Bo góc nhẹ */
}

    .bg-black1 * {
        color: black !important; /* Đảm bảo tất cả nội dung con đều chuyển sang màu đen */
    }